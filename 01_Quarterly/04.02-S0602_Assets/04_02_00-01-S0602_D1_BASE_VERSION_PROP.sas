PROC SQL  ;

/*Create Temp table to load the extracted Data*/
OPTIONS MISSING='';

CREATE TABLE WORK.S0602_D1_PROP AS 

	SELECT 
		 XIP.PORTFOLIO_CLASSIFICATION   AS A1 			

		, COALESCE(RFF.CLIENT_ID,'Not Ring Fenced') AS A2 LENGTH=50

		, COALESCE(UNT_INDX.UNIT_INDEX_LINKED_FLAG,'N') AS A3 	

		/*Required to split up the Property into two CIC and report as two entities*/
		, CASE 
			WHEN TRIM(A.PROPERTY_ID) = 'BRSGA8C52' AND TRIM(B1.CIC_CD) = 'XT91' THEN TRIM(TRIM(A.PROPERTY_ID)||'-A')				
			WHEN TRIM(A.PROPERTY_ID) = 'BRSGA8C52' AND TRIM(B1.CIC_CD) = 'XT92' THEN TRIM(TRIM(A.PROPERTY_ID)||'-B')	
			ELSE TRIM(A.PROPERTY_ID)
		  END  AS A4 LENGTH=50

		, 'UNDERTAKING' AS A5 LENGTH=18

		, COALESCE(ASTS_CLTRL.COLLATERAL_CLASSIFICATION,'9') AS A6 LENGTH=60

		, CASE 
			 WHEN SUBSTR(B1.CIC_CD,3,2) = '95' THEN 'Not Applicable - CIC' 
			 ELSE B.ASSET_DESC
		  END AS A7 LENGTH=500

		, 'Not Applicable - CIC'  	AS A8 LENGTH=100

		, 'Not Applicable - CIC'   AS A31 LENGTH=50

		, 'Not Applicable - CIC'   AS A33 LENGTH=50

		, 'Not Applicable - CIC'  	AS A9 LENGTH=50

		, 'Not Applicable - CIC'  	AS A10 LENGTH=100

		, 'Not Applicable - CIC'   AS A32 LENGTH=50

		, 'Not Applicable - CIC'	AS A33GROUP LENGTH=50

		, 'Not Applicable - CIC'    AS A11

		, CASE /*BV779*/ 
			 WHEN SUBSTR(B1.CIC_CD,3,2) = '95' THEN 'Not Applicable - CIC' 
			 ELSE B1.ASSET_LOCATION_COUNTRY_CD 
		   END AS A12

		, CASE /*BV237*/
			 WHEN SUBSTR(B1.CIC_CD,3,2) = '95' THEN 'Not Applicable - CIC' 
			 ELSE B.CURRENCY_CD 
		  END AS A13 LENGTH=50

		, B1.CIC_CD  AS A15  LENGTH=32 format =$32.

		, 'Not Applicable - CIC'    AS A16 LENGTH=32

		, 'Not Applicable - CIC'  	AS A17

		, 'Not Applicable - CIC' 	AS A18

		, 'Not Applicable - CIC'  	AS A20

		, 'Not Applicable - CIC' 	AS A22BRS

		, 'Not Applicable - CIC'  	AS A22PAM

		, 'Not Applicable - CIC'  	AS A22ABRS

		, 'Not Applicable - CIC' 	AS A22APAM

		, 'Not Applicable - CIC'  	AS A23BRS

		, 'Not Applicable - CIC'  	AS A23PAM

		, 'Not Applicable - CIC'  	AS A23ABRS LENGTH=20

		, 'Not Applicable - CIC'	AS A23APAM LENGTH=20

		, B1.VALUATION_METHOD_SII_OVRD AS A24

		, PUT(B1.PURCHASE_AMT,18.2)  AS A25BRS LENGTH=20

		, ''  AS A25PAM LENGTH=20

		,  B1.APPRAISED_AMT AS A26BRS 

		,  COALESCE(PAM_PROP.PAM_MKT_VAL,0.00) AS A26PAM

		,  B1.APPRAISED_AMT AS  A26FIN_SDW

		, 'Not Applicable - CIC'   AS A28

		, D.X_ACC_INT AS A30BRS

		, PAM_PROP.PAM_END_ACCRUED AS A30PAM

		, XIP.ENTITY_NAME AS A50

		, C.PORTFOLIO_ID AS INT1

		, XIP.INTERNAL_ORG_REFERENCE_NO AS INT1A

		, SUBSTR(B1.CIC_CD,3,1) AS INT2 LENGTH=32

		, CIC_CAT.X_CIC_CATEGORY_NM AS INT2A

		, CIC_CAT.X_CIC_SUB_CATEGORY_NM AS INT2B

		, 'REIT PAPER - JPUTs' AS INT3 LENGTH=255

		, PAM_PROP.PAM_GRP  AS INT4

		, A.X_I_T_INV_CLS_GROUP_OVRD AS INT5

		, A.X_I_T_INV_CLS_CATEGORY_OVRD AS INT6

		, '-'  AS INT7 LENGTH=10

		, 'REIT' AS SM_SEC_TYPE LENGTH=10

		, MONTH(&AS_AT_MTH) AS INT9

		, YEAR(&AS_AT_MTH)  AS INT10

		, C.SOURCE_SYSTEM_CD AS SOURCE_SYSTEM_CD

		, XIP.ENTITY_LEI_CD 

		, XIP.ENTITY_LEI_STATUS	

		, XIP.CUSTODIAN

		, 'Not Applicable - CIC' AS X_INTERNAL_RATING LENGTH=20

		, '' AS INFRASTRUCTURE_INV_CD LENGTH=10

		, A.PROPERTY_ID  AS CUSIP

		,'FUND' AS SM_SEC_GROUP LENGTH=6

		, 'NO' AS INFRA_CORP_BONDS LENGTH=6

		,  'NO' AS INFRA_CORP_BONDS_OVRD LENGTH=6

		, '' AS X_STRUCTURE LENGTH=50

		/**EXTRA COLUMNS**/

		, '1' AS C0300 LENGTH=16
 
		, 'Not Applicable - CIC'  AS C0292

		, 'Not Applicable - CIC'  AS SOLII_CREDIT_QUALITY

		, B1.FINANCE_INV_CLS AS FIN_SOLII_CLS   LENGTH = 50     

		, 'Not Applicable - CIC' AS A31_TRUE LENGTH=50

		, 'Not Applicable - CIC' AS A32_TRUE LENGTH=50 

		, 'Not Applicable - CIC' AS A33_TRUE LENGTH=50 

		, 'Not Applicable - CIC' AS A33GROUP_TRUE LENGTH=50 

		, B1.PURCHASE_AMT  AS C0160_CALC FORMAT=21.2

	FROM
		test.PROPERTY A /*Main Property Table*/

	 /*PHYSICAL_ASSET Table*/
	INNER JOIN test.PHYSICAL_ASSET B
		ON  A.PROPERTY_RK =  B.PROPERTY_RK
		AND DATEPART(B.VALID_FROM_DTTM) <= &AS_AT_MTH 				
		AND DATEPART(B.VALID_TO_DTTM) > &AS_AT_MTH	

	/*X_PHYSICAL_ASSET Table*/
	INNER JOIN test.X_PHYSICAL_ASSET B1
		ON B.PHYSICAL_ASSET_RK = B1.PHYSICAL_ASSET_RK
		AND DATEPART(B1.VALID_FROM_DTTM) <= &AS_AT_MTH 				
		AND DATEPART(B1.VALID_TO_DTTM) > &AS_AT_MTH	

	/*FINANCIAL_POSITION Table*/
	INNER JOIN test.FINANCIAL_POSITION C
		ON  B.PHYSICAL_ASSET_RK = C.PHYSICAL_ASSET_RK  
		AND DATEPART(C.VALID_FROM_DTTM) <= &AS_AT_MTH 				
		AND DATEPART(C.VALID_TO_DTTM) > &AS_AT_MTH					

	/*X_FINANCIAL_POSITION_CHNG Table*/
	LEFT JOIN test.X_FINANCIAL_POSITION_CHNG D				
		ON  C.FINANCIAL_POSITION_RK = D.FINANCIAL_POSITION_RK				
		AND DATEPART(D.VALID_FROM_DTTM) <= &AS_AT_MTH 				
		AND DATEPART(D.VALID_TO_DTTM) > &AS_AT_MTH			

	/*join on X_INVESTMENT_PORTFOLIO*/
	LEFT JOIN test.X_INVESTMENT_PORTFOLIO XIP																															
		ON XIP.PORTFOLIO_ID = C.PORTFOLIO_ID 																													
		AND PUT(DATEPART(XIP.VALID_TO_DTTM),DATE9.) = '31DEC9999'

	/*join on X_RING_FENCED_FUNDS*/
	LEFT JOIN 				
		(				
			SELECT 			
				DISTINCT
					PORTFOLIO_ID
					,CUSIP
					,ISIN
					,CLIENT_ID
			FROM 			
				test.X_RING_FENCED_FUNDS
			WHERE			
				DATEPART(VALID_FROM_DTTM) <= &AS_AT_MTH 				
				AND DATEPART(VALID_TO_DTTM) > &AS_AT_MTH
				AND AS_AT_MTH = &AS_AT_MTH 	
		) RFF				
	ON 	RFF.PORTFOLIO_ID  = XIP.PORTFOLIO_ID	
		AND RFF.CUSIP = A.PROPERTY_ID

	/*join on X_ASSETS_LINKED_FUNDS*/
	LEFT JOIN 				
		(				
			SELECT 			
				DISTINCT
					PORTFOLIO_ID,
					CUSIP,
					ISIN,
					CLIENT_ID,
					UNIT_INDEX_LINKED_FLAG
			FROM 			
				test.X_ASSETS_LINKED_FUNDS
			WHERE			
				DATEPART(VALID_FROM_DTTM) <= &AS_AT_MTH 				
				AND DATEPART(VALID_TO_DTTM) > &AS_AT_MTH
				AND AS_AT_MTH = &AS_AT_MTH 
		) UNT_INDX				
	ON 	UNT_INDX.PORTFOLIO_ID  = XIP.PORTFOLIO_ID	
		AND UNT_INDX.CUSIP = A.PROPERTY_ID 
	
	/*join on X_ASSETS_COLLATERAL*/
	LEFT JOIN 				
		(
			SELECT 				
				DISTINCT
					PORTFOLIO_ID,
					CUSIP,
					ISIN,
					CLIENT_ID,
					COLLATERAL_CLASSIFICATION
			FROM 			
				test.X_ASSETS_COLLATERAL
			WHERE			
				DATEPART(VALID_FROM_DTTM) <= &AS_AT_MTH 				
				AND DATEPART(VALID_TO_DTTM) > &AS_AT_MTH
				AND AS_AT_MTH = &AS_AT_MTH	
		) ASTS_CLTRL				
	ON ASTS_CLTRL.PORTFOLIO_ID  = XIP.PORTFOLIO_ID	
	   AND ASTS_CLTRL.CUSIP = A.PROPERTY_ID	

	/*get Category subname and names*/
	LEFT JOIN 
		(
			SELECT	
				DISTINCT 
					X_CIC_CATEGORY_CD ,
					X_CIC_CATEGORY_NM , 
					X_CIC_CD_LAST_2_CHAR,
					X_CIC_SUB_CATEGORY_NM
				 FROM	
					test.X_CIC_CATEGORY
		) CIC_CAT
	ON 
		CIC_CAT.X_CIC_CD_LAST_2_CHAR = SUBSTR(TRIM(B1.CIC_CD),3,2)

	/*join on PAM related tables*/
	LEFT JOIN 
		(
		SELECT 
			'-'  AS BRS_ISIN,
			PROP_ASSET.PHYSICAL_ASSET_ID AS BRS_CUSIP,
			FP.PORTFOLIO_ID AS BRS_PORTFOLIO,
			PROP.X_PAM_GL_GRP AS BRS_GRP,

			PAM.BRSID AS PAM_CUSIP,
			PAM.ISIN AS PAM_ISIN,
			PAM.TICKER AS PAM_PORTFOLIO,
			PAM.ACC_GL_GROUP_DESC AS PAM_GRP,

			FP.X_MARKET_VALUE AS BRS_MKT_VAL,
			PAM.ACC_MARKET_VALUE AS PAM_MKT_VAL,
			PAM.ACC_END_ACCRUED AS PAM_END_ACCRUED,
			ACC_SECURITY_DESC_LINE_1,
			ACC_SECURITY_DESC_LINE_2,
			ACC_SECURITY_DESC_LINE_3

		FROM 
			test.PHYSICAL_ASSET PROP_ASSET

		INNER JOIN 
			test.PROPERTY PROP
			ON PROP.PROPERTY_RK = PROP_ASSET.PROPERTY_RK
			AND DATEPART(PROP.VALID_FROM_DTTM) <= &AS_AT_MTH                                                                                                                   
			AND DATEPART(PROP.VALID_TO_DTTM) > &AS_AT_MTH 

		INNER JOIN 
			test.FINANCIAL_POSITION FP
			ON PROP_ASSET.PHYSICAL_ASSET_RK = FP.PHYSICAL_ASSET_RK
			AND DATEPART(FP.VALID_FROM_DTTM) <= &AS_AT_MTH                                                                                                                   
			AND DATEPART(FP.VALID_TO_DTTM) > &AS_AT_MTH 

		LEFT JOIN 
		(
			SELECT 
				TICKER,
				BRSID,
				ISIN,
				FINANCIAL_INSTRUMENT_RK,
				PHYSICAL_ASSET_RK,
				ACC_SECURITY_DESC_LINE_1,
				ACC_SECURITY_DESC_LINE_2,
				ACC_SECURITY_DESC_LINE_3,
				ACC_GL_GROUP_DESC,
				ACC_UNITS,
				ACC_PRICE,
				ACC_END_ACCRUED,
				ACC_ACTUAL_BV,
				ACC_MARKET_VALUE,
				ACC_CURRENCY
			FROM 
				test.X_BLKRK_ACCT
	 
			WHERE 
				PHYSICAL_ASSET_RK IS NOT NULL
				AND DATEPART(VALID_FROM_DTTM) <= &AS_AT_MTH                                                                                                                   
				AND DATEPART(VALID_TO_DTTM) > &AS_AT_MTH 
		)PAM
			ON PROP_ASSET.PHYSICAL_ASSET_RK = PAM.PHYSICAL_ASSET_RK

		WHERE 
			DATEPART(PROP_ASSET.VALID_FROM_DTTM) <= &AS_AT_MTH                                                                                                                   
			AND DATEPART(PROP_ASSET.VALID_TO_DTTM) > &AS_AT_MTH 
	)PAM_PROP
		ON A.PROPERTY_ID = PAM_PROP.PAM_CUSIP


/*Main WHERE Clause*/	
	WHERE 				
		DATEPART(A.VALID_FROM_DTTM) <= &AS_AT_MTH 				
		AND DATEPART(A.VALID_TO_DTTM) > &AS_AT_MTH	
;

QUIT;
